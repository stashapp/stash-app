type PerformerAppearance {
  performer: Performer!
  """Performing as alias"""
  as: String
}

input PerformerAppearanceInput {
  performer_id: ID!
  """Performing as alias"""
  as: String
}

enum FingerprintAlgorithm {
  MD5
  OSHASH
}

type Fingerprint {
  hash: String!
  algorithm: FingerprintAlgorithm!
  duration: Int!
}

input FingerprintInput {
  hash: String!
  algorithm: FingerprintAlgorithm!
  duration: Int!
}

input FingerprintQueryInput {
  hash: String!
  algorithm: FingerprintAlgorithm!
}

input FingerprintSubmission {
  scene_id: ID!
  fingerprint: FingerprintInput!
}

type Scene {
  id: ID!
  title: String
  details: String
  date: Date
  urls: [URL!]!
  studio: Studio
  tags: [Tag!]!
  images: [Image!]!
  performers: [PerformerAppearance!]!
  fingerprints: [Fingerprint!]!
  duration: Int
  director: String
  deleted: Boolean!
}

input SceneCreateInput {
  title: String
  details: String
  urls: [URLInput!]
  date: Date
  studio_id: ID
  performers: [PerformerAppearanceInput!]
  tag_ids: [ID!]
  image_ids: [ID!]
  fingerprints: [FingerprintInput!]!
  duration: Int
  director: String
}

input SceneUpdateInput {
  id: ID!
  title: String
  details: String
  urls: [URLInput!]
  date: Date
  studio_id: ID
  performers: [PerformerAppearanceInput!]
  tag_ids: [ID!]
  image_ids: [ID!]
  fingerprints: [FingerprintInput!]
  duration: Int
  director: String
}

input SceneDestroyInput {
  id: ID!
}

input SceneEditDetailsInput {
  title: String
  details: String
  urls: [URLInput!]
  date: Date
  studio_id: ID
  performers: [PerformerAppearanceInput!]
  tag_ids: [ID!]
  image_ids: [ID!]
  fingerprints: [FingerprintInput!]
  duration: Int
  director: String
}

input SceneEditInput {
  edit: EditInput!
  """Not required for destroy type"""
  details: SceneEditDetailsInput
  duration: Int
}

type SceneEdit {
  title: String
  details: String
  added_urls: [URL!]
  removed_urls: [URL!]
  date: Date
  studio_id: ID
  """Added or modified performer appearance entries"""
  added_performers: [PerformerAppearance!]
  removed_performers: [PerformerAppearance!]
  added_tags: [Tag!]
  removed_tags: [Tag!]
  added_images: [Image]
  removed_images: [Image]
  added_fingerprints: [Fingerprint!]
  removed_fingerprints: [Fingerprint!]
  duration: Int
  director: String
}

type QueryScenesResultType {
  count: Int!
  scenes: [Scene!]!
}

input SceneFilterType {
  """Filter to search title and details - assumes like query unless quoted"""
  text: String
  """Filter to search title - assumes like query unless quoted"""
  title: String
  """Filter to search urls - assumes like query unless quoted"""
  url: String
  """Filter by date"""
  date: DateCriterionInput
  """Filter to only include scenes with this studio"""
  studios: MultiIDCriterionInput
  """Filter to only include scenes with this studio as primary or parent"""
  parentStudio: String
  """Filter to only include scenes with these tags"""
  tags: MultiIDCriterionInput
  """Filter to only include scenes with these performers"""
  performers: MultiIDCriterionInput
  """Filter to include scenes with performer appearing as alias"""
  alias: StringCriterionInput
}
